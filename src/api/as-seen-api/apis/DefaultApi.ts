/* tslint:disable */
/* eslint-disable */
/**
 * Afkae. Brothers - AsSeen API
 * API documentation for Afkae. Brothers - AsSeen
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AppInfoGet200Response,
  AuthMeGet200Response,
  HealthGet200Response,
  SetupUserGet201Response,
} from '../models/index';
import {
    AppInfoGet200ResponseFromJSON,
    AppInfoGet200ResponseToJSON,
    AuthMeGet200ResponseFromJSON,
    AuthMeGet200ResponseToJSON,
    HealthGet200ResponseFromJSON,
    HealthGet200ResponseToJSON,
    SetupUserGet201ResponseFromJSON,
    SetupUserGet201ResponseToJSON,
} from '../models/index';

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     */
    async appInfoGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AppInfoGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }


        let urlPath = `/app-info`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AppInfoGet200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async appInfoGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AppInfoGet200Response> {
        const response = await this.appInfoGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async authMeGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthMeGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }


        let urlPath = `/auth/me`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthMeGet200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async authMeGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthMeGet200Response> {
        const response = await this.authMeGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async healthGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HealthGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }


        let urlPath = `/health`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HealthGet200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async healthGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HealthGet200Response> {
        const response = await this.healthGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async setupUserGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SetupUserGet201Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }


        let urlPath = `/setup-user`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SetupUserGet201ResponseFromJSON(jsonValue));
    }

    /**
     */
    async setupUserGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SetupUserGet201Response> {
        const response = await this.setupUserGetRaw(initOverrides);
        return await response.value();
    }

}
